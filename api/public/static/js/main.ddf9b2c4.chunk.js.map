{"version":3,"sources":["App.js","theme.js","index.js"],"names":["App","React","useState","list","setList","result","setResult","lastResult","setLastResult","selector","useRef","url","returnAsHTML","Container","maxWidth","List","ListItem","TextField","inputRef","label","fullWidth","ListItemSecondaryAction","IconButton","onClick","current","k","Date","val","value","Add","map","item","ListItemText","primary","key","filter","el","Remove","FormControlLabel","control","Switch","Button","color","variant","fetch","method","headers","body","JSON","stringify","patterns","returnHTML","checked","then","res","json","catch","console","error","Dialog","onClose","open","Boolean","DialogContent","enableClipboard","displayDataTypes","src","notYetRendered","theme","createMuiTheme","palette","main","secondary","red","A400","background","default","ReactDOM","render","ThemeProvider","CssBaseline","document","querySelector"],"mappings":"+VASe,SAASA,IAAO,IAAD,EACJC,IAAMC,SAAS,IADX,mBACrBC,EADqB,KACfC,EADe,OAEAH,IAAMC,SAAS,MAFf,mBAErBG,EAFqB,KAEbC,EAFa,OAGQL,IAAMC,SAAS,MAHvB,mBAGrBK,EAHqB,KAGTC,EAHS,KAItBC,EAAWR,IAAMS,OAAO,MACxBC,EAAMV,IAAMS,OAAO,MACnBE,EAAeX,IAAMS,OAAO,MAwBlC,OACE,eAACG,EAAA,EAAD,CAAWC,SAAS,KAApB,UACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAWC,SAAUP,EAAKQ,MAAM,YAAYC,WAAS,MAEvD,eAACJ,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAWC,SAAUT,EAAUU,MAAM,eAAeC,WAAS,IAC7D,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAYC,QA/BJ,WAChBnB,EAAQK,EAASe,QAAT,CAAkB,CAAEC,EAAc,EAAX,IAAIC,KAAUC,IAAKlB,EAASe,QAAQI,QAA3D,mBAAuEzB,IAAMA,GACrFM,EAASe,QAAQI,MAAQ,IA6BjB,SACE,cAACC,EAAA,EAAD,WAIL1B,EAAK2B,KAAI,SAAAC,GAAI,OACZ,eAACf,EAAA,EAAD,WACE,cAACgB,EAAA,EAAD,CAAcC,QAASF,EAAKJ,MAC5B,cAACN,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAYC,SApCHW,EAoCyBH,EAAKN,EApCvB,kBAAKrB,EAAQD,EAAKgC,QAAO,SAAAC,GAAE,OAAEA,EAAGX,IAAIS,QAoCpD,SAA2C,cAACG,EAAA,EAAD,UAHhCN,EAAKN,GAjCP,IAAAS,QAyCjB,cAACI,EAAA,EAAD,CAAkBnB,MAAM,0BAAkBoB,QAAS,cAACC,EAAA,EAAD,CAAQtB,SAAUN,MACrE,cAAC6B,EAAA,EAAD,CAAQrB,WAAS,EAACsB,MAAM,UAAUC,QAAQ,YAAYpB,QAzCvC,WAAK,IAAD,IACrBqB,MAAM,SAAU,CACdC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CACnBtC,KAAK,UAAAA,EAAIa,eAAJ,eAAaI,QAAO,GACzBsB,SAAU/C,EAAK2B,KAAI,SAAArB,GAAQ,OAAEA,EAASkB,OACtCwB,WAAU,UAAEvC,EAAaY,eAAf,aAAE,EAAsB4B,YAGrCC,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UACdF,KAAK/C,GACLkD,MAAMC,QAAQC,QA2Bb,mCACA,cAACC,EAAA,EAAD,CAAQ7C,SAAS,KAAK8C,QA1BN,WAAMpD,EAAcH,GAASC,EAAU,OA0BXc,WAAS,EAACyC,KAAMC,QAAQzD,GAApE,SACE,cAAC0D,EAAA,EAAD,UACE,cAAC,IAAD,CAAWC,iBAAiB,EAAOC,kBAAkB,EAAOC,IAAK7D,GAAQE,GAAY,CAAE4D,gBAAgB,Y,oBC7ClGC,EAjBDC,YAAe,CAC3BC,QAAS,CACPrC,QAAS,CACPsC,KAAM,WAERC,UAAW,CACTD,KAAM,WAERb,MAAO,CACLa,KAAME,IAAIC,MAEZC,WAAY,CACVC,QAAS,WCTfC,IAASC,OACP,eAACC,EAAA,EAAD,CAAeX,MAAOA,EAAtB,UAEE,cAACY,EAAA,EAAD,IACA,cAAChF,EAAD,OAEFiF,SAASC,cAAc,Y","file":"static/js/main.ddf9b2c4.chunk.js","sourcesContent":["import React from 'react';\nimport {Container, TextField, Dialog, DialogContent, List, ListItem, ListItemText, ListItemSecondaryAction, \n  IconButton, Button, FormControlLabel, Switch } from '@material-ui/core';\nimport { Add, Remove } from '@material-ui/icons';\nimport ReactJson from 'react-json-view'\n\n\n\n\nexport default function App() {\n  const [list, setList] = React.useState([]);\n  const [result, setResult] = React.useState(null);\n  const [lastResult, setLastResult] = React.useState(null);\n  const selector = React.useRef(null);\n  const url = React.useRef(null);\n  const returnAsHTML = React.useRef(null);\n\n  const handleAdd = () => {\n    setList(selector.current?[{ k: new Date()*1, val: selector.current.value }, ...list]:list);\n    selector.current.value = '';\n  }\n  const handleRemove = key => () =>setList(list.filter(el=>el.k!==key));\n  const handleSend = ()=>{\n    fetch('/scrap', {\n      method: \"POST\",\n      headers: {\n        'Content-type': 'application/json',\n      },\n      body: JSON.stringify({ \n        url: url.current?.value||'',\n        patterns: list.map(selector=>selector.val),\n        returnHTML: returnAsHTML.current?.checked\n       })\n    })\n    .then(res=>res.json())\n    .then(setResult)\n    .catch(console.error);\n  }\n  const handleClose = ()=>{ setLastResult(result); setResult(null) };\n  return (\n    <Container maxWidth=\"sm\">\n      <List>\n        <ListItem>\n          <TextField inputRef={url} label=\"Adres URL\" fullWidth />\n        </ListItem>\n        <ListItem>\n          <TextField inputRef={selector} label=\"selektor CSS\" fullWidth />\n          <ListItemSecondaryAction>\n            <IconButton onClick={handleAdd}>\n              <Add />\n            </IconButton>\n          </ListItemSecondaryAction>\n        </ListItem>\n        {list.map(item=>(\n          <ListItem key={item.k}>\n            <ListItemText primary={item.val} />\n            <ListItemSecondaryAction>\n              <IconButton onClick={handleRemove(item.k)}><Remove /></IconButton>\n            </ListItemSecondaryAction>\n          </ListItem>\n        ))}\n      </List>\n      <FormControlLabel label=\"Zwróć jako HTML\" control={<Switch inputRef={returnAsHTML} />} />\n      <Button fullWidth color=\"primary\" variant=\"contained\" onClick={handleSend}>Wyślij zapytanie</Button>\n      <Dialog maxWidth=\"md\" onClose={handleClose} fullWidth open={Boolean(result)}>\n        <DialogContent>\n          <ReactJson enableClipboard={false} displayDataTypes={false} src={result||lastResult||{ notYetRendered: true }} />\n        </DialogContent>\n      </Dialog>\n    </Container>\n  );\n}\n","import { red } from '@material-ui/core/colors';\nimport { createMuiTheme } from '@material-ui/core/styles';\n\n// A custom theme for this app\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#556cd6',\n    },\n    secondary: {\n      main: '#19857b',\n    },\n    error: {\n      main: red.A400,\n    },\n    background: {\n      default: '#fff',\n    },\n  },\n});\n\nexport default theme;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport App from './App';\nimport theme from './theme';\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n    <CssBaseline />\n    <App />\n  </ThemeProvider>,\n  document.querySelector('#root'),\n);\n"],"sourceRoot":""}